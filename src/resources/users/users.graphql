enum AffiliateRole {
  ADMIN
  EMPLOYEE
  MEMBER
}

enum PortalRole {
  ADMIN
}

input CreateUserInput {
  email: String!
  password: String!
}

input SignUpOptions {
  createPortal: Boolean = false
}

type Me {
  token: String!
  userId: ID!
}

type TokenOutput {
  token: String!
}

type User {
  id: ID!
  email: String!
  affiliateUserRoles: [AffiliateRole]!
  portalUserRoles: [PortalRole]!
}

type Mutation {
  signIn(email: String!, password: String!): TokenOutput!
  signOut: Boolean!
  signUp(email: String!, password: String!, options: SignUpOptions = {}): TokenOutput!
}

type Query {
  me: Me
}
